rules_version = '2';
service cloud.firestore {
    match /databases/{database}/documents {
        function isSignedIn(){
            return request.auth.uid != null;
        }
        function isSignedInAndSelf(id) {
            return isSignedIn() && request.auth.uid == id;
        }
        match /items/{itemId} {
            allow create: if isSignedInAndSelf(request.resource.data.userId);
            allow update, delete: if isSignedInAndSelf(resource.data.userId);
            allow read: if true;
        }
        match /users/{userId} {
            function isFromOrTo(){
                return (resource.data.from == request.auth.uid && resource.data.to == userId) || (resource.data.to == request.auth.uid && resource.data.from == userId);
            }
            match /chats/{chatId}/messages/{messageId} {
                allow create: if isSignedIn();
                allow read, update: if isSignedIn() && isFromOrTo();
                allow delete: if false;
            }
            match /messagePartners/{messagePartner} {
                allow read, create, update: if isSignedIn() && (messagePartner == request.auth.uid || userId == request.auth.uid);
                allow delete: if false;
            }
            allow read: if true;
            allow create, update: if isSignedInAndSelf(userId);
            allow delete: if false;
            match /{document=**} {
                allow read: if true;
                allow update: if isSignedInAndSelf(userId);
                allow delete, create: if false;
            }
        }
        match /{document=**} {
            allow read: if true;
            allow write: if false;
        }
    }
}